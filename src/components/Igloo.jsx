/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.3 ../public/bedroom.glb
*/

import React, { useRef } from 'react'
import { useGLTF, PerspectiveCamera } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'


export default function Igloo(props) {
  const { nodes, materials } = useGLTF('./assets/igloo.glb')

  const meshRef = useRef();

  useFrame(() => {
    var mesh = meshRef.current;
      mesh.position.set(11, 0.8, -11);
    mesh.rotation.set(0, 180 , 0);
    mesh.scale.set(2.75, 3.25, 2.75);
  });

  return (
    <group ref={meshRef} {...props} dispose={null}>
      <PerspectiveCamera makeDefault={false} far={100} near={0.1} fov={22.895} position={[7.359, 4.958, 6.926]} rotation={[-0.627, 0.71, 0.441]} />
      <pointLight intensity={0.1} decay={2} color="#e2fff5" position={[0.18, 0.152, 0]} rotation={[-Math.PI / 2, 0, 0]} />
      {/* <mesh geometry={nodes.Sphere001.geometry} material={nodes.Sphere001.material} /> */}
      <mesh geometry={nodes.Sphere002.geometry} material={materials['Material.004']} />
      <mesh geometry={nodes.Igloo.geometry} material={materials['Material.001']} />
      {/* <mesh geometry={nodes.Cylinder001.geometry} material={nodes.Cylinder001.material} position={[1.028, 0.134, 0]} rotation={[0, 0, -Math.PI / 2]} scale={[0.54, 0.46, 0.413]} /> */}
      <mesh geometry={nodes.Doorway.geometry} material={materials['Material.002']} position={[1.079, 0.117, 0.012]} rotation={[0.136, 0, -Math.PI / 2]} scale={0.504} />
      <mesh geometry={nodes.Cylinder002.geometry} material={materials['Material.003']} position={[1.028, 0.134, 0]} rotation={[0, 0, -Math.PI / 2]} scale={[0.54, 0.416, 0.413]} />
      {/* <mesh geometry={nodes.Plane.geometry} material={nodes.Plane.material} scale={1.774} /> */}
    </group>
  )
}

useGLTF.preload('/igloo.glb')